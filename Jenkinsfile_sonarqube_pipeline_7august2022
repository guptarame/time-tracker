pipeline {
  agent any
        tools {
                  maven "MAVEN_HOME"
               }
      stages {
                stage('build') {
                                steps {
                                            git branch: 'myself', credentialsId: 'gitcredentials', url: 'https://github.com/guptarame/time-tracker.git'
                                            }
                                }
                stage('Compile') {
                                steps {
                                            bat 'mvn compile'
                                       }
                                }
                stage('unit Test') {
                                steps {
                                            bat 'mvn -Dtest=TrackerTest#testMe test -pl core'
                                       }
                                    }
                stage('Regression Test') {
                                steps {
                                            bat 'mvn -Dtest=TrackerTest test -pl core'
                                       }
                                    }
                 stage('Integration Test') {
                                steps {
                                            bat 'mvn test'
                                       }
                                    }
                 stage('Result') {
                                steps {
                                            echo 'This will display Result'
                                            junit '**/*.xml'
                                       }
                                }
                stage('package') {
                                steps {
                                            bat 'mvn package'
                                            archiveArtifacts artifacts: '**/*.war', followSymlinks: false
                                      }
                                }
                 stage('sonarqube Analysis') {
                                                steps {

                                                        withSonarQubeEnv() {
                                        def mvn = tool 'MAVEN_HOME';
                                        bat "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=my-java-maven-sonar"
                                            }


                                                     // def scannerHome = tool 'mysonarqube';
                                                       //        withSonarQubeEnv("sonarqube-container") {
                                                         //      sh "${tool("sonarqube")}/bin/sonar-scanner \
                                                           //    -Dsonar.projectKey=test-node-js \
                                                             //  -Dsonar.sources=. \
                                                             //  -Dsonar.css.node=. \
                                                            //   -Dsonar.host.url=http://your-ip-here:9000 \
                                                           //    -Dsonar.login=your-generated-token-from-sonarqube-container

                                                          //withSonarQubeEnv('mysonarqube') {
                                                            //    bat 'mvn clean package sonar:sonar'
                                                             // } // submitted SonarQube taskId is automatically attached to the pipeline context

                                                        //    def scannerHome = tool 'mysonarqube';
                                                        //        withSonarQubeEnv('sonarqube') {
                                                        //          bat "${scannerHome}/bin/sonar-scanner \
                                                        //         -D sonar.login=admin \
                                                        //          -D sonar.password=admin123 \
                                                        //         -D sonar.projectKey=my-java-maven-sonar \
                                                        //        -D sonar.exclusions=vendor/**,resources/**,**/*.java \
                                                        //       -D sonar.host.url=http:// 192.168.29.15:9000/"

                                                         //   withSonarQubeEnv(credentialsId: 'jenkinssonarconnectionid', installationName: 'mysonarqube') {
                                                         //       bat ''' \
                                                         //       -Dsonar.projectKey=my-java-maven-sonar \
                                                         //       -Dsonar.projectName= Time Tracker Project With Java Maven \
                                                         //       -Dsonar.projectVersion=1.0
                                                         //       -Dsonar.java.binaries=core/target/classes \
                                                         //       -Dsonar.sources=core,web \
                                                         //       -Dsonar.language=Java \
                                                          //      -Dsonar.sourceEncoding=UTF-8 \
                                                           //     '''
                                                          //  }
                                                     }
                                                }
                stage('Upload The Binary_War') {
                                steps {
                                            echo 'Upload The Binary'
                                       }
                                }
                stage('Deploy The Binary_War') {
                                steps {
                                            echo 'Deploy The Binary'
                                       }
                                 }
  }
}